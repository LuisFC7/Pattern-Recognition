clc % limpia pantalla
clear all % limpia todo
close all %cierra todo
warning off all  % apaga los warnings

newcolors = {'r','g','b','c','m','y','#0072BD','#D95319','#EDB120','#7E2F8E','#77AC30','#4DBEEE','#A2142F'};%se mandan llamar los colores

nc=input('¿Cuántas clases quieres?   ');%nc-> número de clases
npc=input('¿Cuántas repeticiones de clase quieres?   ');%npc-> número de repeticiones por clase

%nclss -> n clases
%mdclss -> medias
%dstclss -> distancias

for f1=1:nc
   ncls(:,:,f1)=randn(2,npc);
end
    fprintf('\n');
for f1=1:nc
   fprintf('Introduce el centroide de la clase %d   ',f1);
   temCent=input('');%variable que almacena valor del centroide
   ncls(:,:,f1)=ncls(:,:,f1)+temCent;
end
    fprintf('\n');
for f1=1:nc
   fprintf('Introduce la disperción de la clase %d   ',f1);
   temCent=input('');
   ncls(:,:,f1)=ncls(:,:,f1)*temCent;
end
    fprintf('\n');
%calculo de medias
for f1=1:nc
   mdclss(:,f1)=mean(ncls(:,:,f1),2);
end

% inicio loop
flag=1;
while flag==1
    %Entrada del vector desconocido
    vx=input('Coordenada del vector en x=  ');
    vy=input('Coordenada del vector en y=  ');
    vector=[vx;vy];
    fprintf('\n');

       %toma de decision
    for f1=1:nc
        dstclss(:,f1)=norm(vector-mdclss(:,f1));%calculo de la distancia
    end
    minimo=min(min(dstclss));
    valor=find(dstclss==minimo);
    fprintf('El vector  pertenece a la clase \"%d\"\n',valor);

    %graficado
    cla reset; %"limpiar" la figura
    figure(1)
    grid on
    hold on
    txtlegend={}; %arreglo de las leyendas
    xlabel('Coordenada X');
    ylabel('Coordenada Y');
    title('Gráfica de Clases y vector');
    for f1=1:nc   %Impresion de las clases
        plot(ncls(1,:,f1),ncls(2,:,f1),'ko','MarkerSize',10,'MarkerFaceColor',newcolors{f1})%impresion de la (f1) clase      
            name=sprintf('Clase %d',f1);
            txtlegend=[txtlegend,name]; %Añadido a leyenda
    end
    plot(vector(1,:),vector(2,:),'kp','MarkerSize',10,'MarkerFaceColor','w')%impresión de punto de vector 
    txtlegend=[txtlegend,'Vector'];
    legend(txtlegend);
    
    flag=input('\n¿Desea agregar otro vector? 0 = No / 1 = Si \n');
    
end %cierre loop
disp('fin del proceso');
